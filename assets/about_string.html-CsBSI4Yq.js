import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as i,o as e}from"./app-KjEtfJ6c.js";const l={};function t(r,n){return e(),a("div",null,n[0]||(n[0]=[i(`<h2 id="_1-generating-strings-and-generating-string-slices" tabindex="-1"><a class="header-anchor" href="#_1-generating-strings-and-generating-string-slices"><span>1. Generating Strings and Generating String Slices</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>//Generate a copy of the string str as s</span></span>
<span class="line"><span>//string s(string str);</span></span>
<span class="line"><span>string s(&quot;abc&quot;);</span></span>
<span class="line"><span>//s is &quot;abc&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Copy a string from index begin with length len from string str as s</span></span>
<span class="line"><span>//string s(string str,int strbegin,int strlen);</span></span>
<span class="line"><span>string s(&quot;abcde&quot;,1,3);</span></span>
<span class="line"><span>//s is &quot;bcd&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// Generate a string from the string str, starting at index begin and with a length of len</span></span>
<span class="line"><span>//substr(int begin, int len);</span></span>
<span class="line"><span>str(&quot;abcd&quot;);</span></span>
<span class="line"><span>string s = str.substr(1, 2);</span></span>
<span class="line"><span>// s is &quot;bc&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、insertion-and-concatenation" tabindex="-1"><a class="header-anchor" href="#_2、insertion-and-concatenation"><span>2、Insertion and Concatenation</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>//Append character c to the end of string s</span></span>
<span class="line"><span>//push_back(char c);</span></span>
<span class="line"><span>string s(&quot;abc&quot;);</span></span>
<span class="line"><span>s.push_back(&#39;a&#39;);</span></span>
<span class="line"><span>//s is &quot;abca&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Insert character c at index index in string s, shifting the original letter and subsequent letters</span></span>
<span class="line"><span>// insert(int index,char c);</span></span>
<span class="line"><span>string s(&quot;abc&quot;);</span></span>
<span class="line"><span>s.insert(2,&#39;a&#39;);</span></span>
<span class="line"><span>//s is &quot;abac&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Append string str to the end of string s</span></span>
<span class="line"><span>//append(string str);</span></span>
<span class="line"><span>string s(&quot;abc&quot;);</span></span>
<span class="line"><span>s.append(&quot;abc&quot;);</span></span>
<span class="line"><span>//s is &quot;abcabc&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、replacement-and-deletion" tabindex="-1"><a class="header-anchor" href="#_3、replacement-and-deletion"><span>3、Replacement and Deletion</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>//Replace the characters from index begin to length len in string s with str</span></span>
<span class="line"><span>//replace(int begin,int len,string str)</span></span>
<span class="line"><span>string s(&quot;abcde&quot;);</span></span>
<span class="line"><span>s.replace(1,3,&quot;aa&quot;);</span></span>
<span class="line"><span>//s is &quot;aaae&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Delete the character at index index in string S, shifting subsequent characters</span></span>
<span class="line"><span>//erase(int index);</span></span>
<span class="line"><span>string s(&quot;abc&quot;);</span></span>
<span class="line"><span>s.erase(1);</span></span>
<span class="line"><span>//s is &quot;ac&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Delete all characters from index head to rear in string s, shifting subsequent characters</span></span>
<span class="line"><span>//erase(int head,int rear);</span></span>
<span class="line"><span>string s(&quot;0123456&quot;);</span></span>
<span class="line"><span>s.erase(1,5);</span></span>
<span class="line"><span>//s is &quot;06&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、searching" tabindex="-1"><a class="header-anchor" href="#_4、searching"><span>4、Searching</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>//Search for substring str in string s</span></span>
<span class="line"><span>//find(string str);</span></span>
<span class="line"><span>//Returns the index of the first character of the first matching substring, or -1 if not found</span></span>
<span class="line"><span>string s(&quot;aa bb cc dd aa&quot;);</span></span>
<span class="line"><span>i=s.find(&quot;aa&quot;);</span></span>
<span class="line"><span>//i is 0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Search for substring str starting from index begin in string s</span></span>
<span class="line"><span>//find(string str,int begin);</span></span>
<span class="line"><span>//Returns the index of the first character of the first matching substring, or -1 if not found</span></span>
<span class="line"><span>string s(&quot;aa bb cc dd aa&quot;);</span></span>
<span class="line"><span>i=s.find(&quot;aa&quot;,5);</span></span>
<span class="line"><span>//i is 12</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Reverse search for substring str in string s</span></span>
<span class="line"><span>//rfind(string str);</span></span>
<span class="line"><span>//Returns the index of the first character of the first matching substring, or -1 if not found</span></span>
<span class="line"><span>string s(&quot;aa bb cc dd aa&quot;);</span></span>
<span class="line"><span>i=s.find(&quot;aa&quot;);</span></span>
<span class="line"><span>//i is 12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、type-conversion" tabindex="-1"><a class="header-anchor" href="#_5、type-conversion"><span>5、Type Conversion</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>//Convert string s to integer and long integer</span></span>
<span class="line"><span>//int stoi(string s);</span></span>
<span class="line"><span>//long long stoll(string s);</span></span>
<span class="line"><span>i=stoi(&quot;123&quot;);</span></span>
<span class="line"><span>//i is int(123)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Convert string s to floating-point type</span></span>
<span class="line"><span>//float stof(string s);</span></span>
<span class="line"><span>//double stod(string s);</span></span>
<span class="line"><span>i=stod(&quot;0011.1100&quot;);</span></span>
<span class="line"><span>//i is double(11.11)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Convert the number to a string</span></span>
<span class="line"><span>//string to_string(double number);</span></span>
<span class="line"><span>//string to_string(long long number);</span></span>
<span class="line"><span>i=to_string(12.34);</span></span>
<span class="line"><span>//i is &quot;12.34&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const d=s(l,[["render",t],["__file","about_string.html.vue"]]),o=JSON.parse(`{"path":"/essay/Some_commonly_used_functions/about_string.html","title":"Commonly Used Functions for the string Type","lang":"en-US","frontmatter":{"title":"Commonly Used Functions for the string Type","icon":"file","order":3,"author":"Mr. Slapstick","date":"2025-01-12T00:00:00.000Z","category":["c++","functions"],"tag":["tips"],"sticky":false,"star":false,"copyright":"No copyright","description":"1. Generating Strings and Generating String Slices 2、Insertion and Concatenation 3、Replacement and Deletion 4、Searching 5、Type Conversion","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://mister-hope.github.io/my_blog/zh/essay/Some_commonly_used_functions/about_string.html"}],["meta",{"property":"og:url","content":"https://mister-hope.github.io/my_blog/essay/Some_commonly_used_functions/about_string.html"}],["meta",{"property":"og:site_name","content":"funny tree's Blog"}],["meta",{"property":"og:title","content":"Commonly Used Functions for the string Type"}],["meta",{"property":"og:description","content":"1. Generating Strings and Generating String Slices 2、Insertion and Concatenation 3、Replacement and Deletion 4、Searching 5、Type Conversion"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr. Slapstick"}],["meta",{"property":"article:tag","content":"tips"}],["meta",{"property":"article:published_time","content":"2025-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Commonly Used Functions for the string Type\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Slapstick\\"}]}"]]},"headers":[{"level":2,"title":"1. Generating Strings and Generating String Slices","slug":"_1-generating-strings-and-generating-string-slices","link":"#_1-generating-strings-and-generating-string-slices","children":[]},{"level":2,"title":"2、Insertion and Concatenation","slug":"_2、insertion-and-concatenation","link":"#_2、insertion-and-concatenation","children":[]},{"level":2,"title":"3、Replacement and Deletion","slug":"_3、replacement-and-deletion","link":"#_3、replacement-and-deletion","children":[]},{"level":2,"title":"4、Searching","slug":"_4、searching","link":"#_4、searching","children":[]},{"level":2,"title":"5、Type Conversion","slug":"_5、type-conversion","link":"#_5、type-conversion","children":[]}],"git":{},"readingTime":{"minutes":1.84,"words":553},"filePathRelative":"essay/Some_commonly_used_functions/about_string.md","localizedDate":"January 12, 2025","excerpt":"<h2>1. Generating Strings and Generating String Slices</h2>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>//Generate a copy of the string str as s</span></span>\\n<span class=\\"line\\"><span>//string s(string str);</span></span>\\n<span class=\\"line\\"><span>string s(\\"abc\\");</span></span>\\n<span class=\\"line\\"><span>//s is \\"abc\\"</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>//Copy a string from index begin with length len from string str as s</span></span>\\n<span class=\\"line\\"><span>//string s(string str,int strbegin,int strlen);</span></span>\\n<span class=\\"line\\"><span>string s(\\"abcde\\",1,3);</span></span>\\n<span class=\\"line\\"><span>//s is \\"bcd\\"</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>// Generate a string from the string str, starting at index begin and with a length of len</span></span>\\n<span class=\\"line\\"><span>//substr(int begin, int len);</span></span>\\n<span class=\\"line\\"><span>str(\\"abcd\\");</span></span>\\n<span class=\\"line\\"><span>string s = str.substr(1, 2);</span></span>\\n<span class=\\"line\\"><span>// s is \\"bc\\"</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{d as comp,o as data};
